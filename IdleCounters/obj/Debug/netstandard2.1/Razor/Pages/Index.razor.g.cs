#pragma checksum "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "80544eaec3bee6224b3c3cb098baa7dbec2beb51"
// <auto-generated/>
#pragma warning disable 1591
namespace IdleCounters.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using IdleCounters;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\_Imports.razor"
using IdleCounters.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
using System.Threading;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1>Counter</h1>\r\n\r\n");
#nullable restore
#line 6 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
 for (int level = 0; level < TotalLevels; level++)
{
    

#line default
#line hidden
#nullable disable
            __builder.AddContent(1, "    ");
            __builder.OpenComponent<IdleCounters.Shared.Count>(2);
            __builder.AddAttribute(3, "Disabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
                     IsDisabled(level)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(4, "Level", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32>(
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
                                               level

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(5, "Unlocked", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
                                                                _unlocked[level]

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(6, "CurrentCount", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.UInt64>(
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
                                                                                                _counts[level]

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(7, "OnBuy", new System.Action<System.Int32>(
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
                                                                                                                        OnBuy

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(8, "OnPrestige", new System.Action<System.Int32>(
#nullable restore
#line 9 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
                                                                                                                                            OnPrestige

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(9, "\r\n");
#nullable restore
#line 10 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
     if (!_unlocked[level])
    {
        break;
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
     
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 17 "C:\Users\Ivan\source\repos\IdleCounters\IdleCounters\Pages\Index.razor"
       
    private const int TotalLevels = 9;

    private ulong[] _counts;
    private bool[] _unlocked;

    private bool IsDisabled(int level)
    {
        if (level == 0)
        {
            return false;
        }
        return _counts[0] < (ulong) Math.Pow(10, level);
    }

    private void OnPrestige(int level)
    {
        if (_counts[0] >= (ulong)Math.Pow(10, level))
        {
            for (int levelTemp = 1; levelTemp < TotalLevels; levelTemp++)
            {
                _counts[levelTemp] = 0;
            }
            _counts[0] -= (ulong) Math.Pow(10, level);
            _unlocked[level] = true;
            _counts[level]++;
        }
    }

    private void OnBuy(int level)
    {
        if (level == 0)
        {
            _counts[level]++;
        }
        else
        {
            if (_counts[0] >= (ulong)Math.Pow(10, level))
            {
                _counts[0] -= (ulong)Math.Pow(10, level);
                _counts[level]++;
            }
        }
        InvokeAsync(() => this.StateHasChanged());
    }


    protected override void OnInitialized()
    {
        RealTimeUpdate();
        _counts = new ulong[TotalLevels];
        _unlocked = new bool[TotalLevels];
        _unlocked[0] = true;
    }

    private void DoStep()
    {
        for (int level = 1; level < TotalLevels; level++)
        {
            _counts[level - 1] += _counts[level];
        }
    }

    public async Task RealTimeUpdate()
    {
        while(true)
        {
            await Task.Delay(TimeSpan.FromMilliseconds(1000));
            DoStep();
            InvokeAsync(() => this.StateHasChanged());
        }
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
